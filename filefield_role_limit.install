<?php

/**
 * @file
 * Install hooks for FileField Role Limit module.
 */

/**
 * Implements hook_install().
 */
function filefield_role_limit_install() {
  $weight = db_result(db_query("SELECT weight FROM {system} WHERE type = 'module' AND name = 'filefield'"));
  db_query("UPDATE {system} SET weight = %d WHERE type = 'module' AND name = 'filefield_role_limit'", $weight + 1);
  $message = st("The %name module installed successfully.",
    array('%name' => st('FileField Role Limit')));
  drupal_set_message($message);
  $message = st("FileField Role Limit settings are available for FileField fields under !nodetypeslink or !fieldslink.",
    array(
      '!nodetypeslink' => l(st('Administer &gt; Content management &gt; Content types'), 'admin/content/types', array('html' => TRUE)),
      '!fieldslink' => l(st('Administer &gt; Content management &gt; Content types &gt; Fields'), 'admin/content/types/fields', array('html' => TRUE))));
  drupal_set_message($message);
}

/**
 * Implements hook_uninstall().
 */
function filefield_role_limit_uninstall() {
  $supported_widgets = array_keys(filefield_role_limit_elements());
  $content_instance_table = content_instance_tablename();
  $sql_args = $supported_widgets;
  array_unshift($sql_args, $content_instance_table);
  $db_result = db_query("SELECT * FROM {%s} WHERE widget_type IN (" . db_placeholders($supported_widgets, 'varchar') . ")", $sql_args);
  while ($row = db_fetch_object($db_result)) {
    $widget_settings = unserialize($row->widget_settings);
    if (empty($widget_settings) === FALSE && is_array($widget_settings) === TRUE) {
      foreach ($widget_settings as $name => $value) {
        if (in_array(drupal_substr($name, 0, 27), array('max_filesize_per_file_role_', 'max_filesize_per_node_role_')) === TRUE) {
          unset($widget_settings[$name]);
        }
      }
      $row->widget_settings = $widget_settings;
      $sql = "UPDATE {%s} SET widget_settings='%s' ";
      $sql .= "WHERE field_name='%s' AND type_name='%s' AND widget_type='%s'";
      db_query($sql, $content_instance_table, serialize($row->widget_settings), $row->field_name, $row->type_name, $row->widget_type);
    }
  }
}
